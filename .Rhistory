term == "density" ~ "Density",
term == "network.delinquency:density" ~ "Delinquency*Density",
T ~ NA_character_)) %>%
mutate(model = "Model 4") %>%
select(term, estimate, std.error)
effects.data <- rbind(gm1, gm2, gm3, gm4)
effects.data
gm1 <- gm1.df %>%
mutate(estimate = exp(estimate),  # Odds ratio
var = diag(vcov(gmodel1)),  # Variance of each coefficient
std.error = sqrt(estimate^2 * var)) %>% #Standard Errors of the ORs
mutate(term = case_when(
term == "(Intercept)" ~ "Intercept",
term == "age" ~ "Age",
term == "female" ~ "Sex",
term == "family.income" ~ "Family Income",
term == "weapon.carry" ~ "Weapon Carry",
term == "racial.heterogeneity" ~ "Racial Heterogeneity",
term == "network.delinquency" ~ "Network Delinquency",
term == "popularity" ~ "Popularity",
term == "centrality" ~ "Centrality",
term == "density" ~ "Density",
T ~ NA_character_)) %>%
mutate(model = "Model 1") %>%
select(term, estimate, std.error, model)
gm2 <- gm2.df %>%
mutate(estimate = exp(estimate),  # Odds ratio
var = diag(vcov(gmodel2)),  # Variance of each coefficient
std.error = sqrt(estimate^2 * var)) %>% #Standard Errors of the ORs
mutate(term = case_when(
term == "(Intercept)" ~ "Intercept",
term == "age" ~ "Age",
term == "female" ~ "Sex",
term == "family.income" ~ "Family Income",
term == "weapon.carry" ~ "Weapon Carry",
term == "racial.heterogeneity" ~ "Racial Heterogeneity",
term == "network.delinquency" ~ "Network Delinquency",
term == "popularity" ~ "Popularity",
term == "centrality" ~ "Centrality",
term == "density" ~ "Density",
term == "network.delinquency:centrality" ~ "Delinquency*Centrality",
T ~ NA_character_)) %>%
mutate(model = "Model 2") %>%
select(term, estimate, std.error, model)
gm3 <- gm3.df %>%
mutate(estimate = exp(estimate),  # Odds ratio
var = diag(vcov(gmodel3)),  # Variance of each coefficient
std.error = sqrt(estimate^2 * var)) %>% #Standard Errors of the ORs
mutate(term = case_when(
term == "(Intercept)" ~ "Intercept",
term == "age" ~ "Age",
term == "female" ~ "Sex",
term == "family.income" ~ "Family Income",
term == "weapon.carry" ~ "Weapon Carry",
term == "racial.heterogeneity" ~ "Racial Heterogeneity",
term == "network.delinquency" ~ "Network Delinquency",
term == "popularity" ~ "Popularity",
term == "centrality" ~ "Centrality",
term == "density" ~ "Density",
term == "network.delinquency:popularity" ~ "Delinquency*Popularity",
T ~ NA_character_)) %>%
mutate(model = "Model 3") %>%
select(term, estimate, std.error, model)
gm4 <- gm4.df %>%
mutate(estimate = exp(estimate),  # Odds ratio
var = diag(vcov(gmodel4)),  # Variance of each coefficient
std.error = sqrt(estimate^2 * var)) %>% #Standard Errors of the ORs
mutate(term = case_when(
term == "(Intercept)" ~ "Intercept",
term == "age" ~ "Age",
term == "female" ~ "Sex",
term == "family.income" ~ "Family Income",
term == "weapon.carry" ~ "Weapon Carry",
term == "racial.heterogeneity" ~ "Racial Heterogeneity",
term == "network.delinquency" ~ "Network Delinquency",
term == "popularity" ~ "Popularity",
term == "centrality" ~ "Centrality",
term == "density" ~ "Density",
term == "network.delinquency:density" ~ "Delinquency*Density",
T ~ NA_character_)) %>%
mutate(model = "Model 4") %>%
select(term, estimate, std.error, model)
effects.data <- rbind(gm1, gm2, gm3, gm4)
dwplot(effects.data)
#Trying out GGcoef
dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 0, colour = "grey60", linetype = 2) +
theme_bw()
dwplot
#Trying out GGcoef
dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
theme_bw()
#Trying out GGcoef
(dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
theme_bw())
effects.data <- rbind(gm2, gm3, gm4)
#Trying out GGcoef
(dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
theme_bw())
ggcoef(gm1, mapping = aes_string(y = "term", x = "estimate"),
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending")
#Trying out GGcoef
(dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
theme_bw())
ggcoef(gmodel1, mapping = aes_string(y = "term", x = "estimate"),
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending")
ggcoef(gmodel1, mapping = aes_string(y = "term", x = "estimate"),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending")
ggcoef(effects.data, mapping = aes_string(y = "term", x = "estimate", color = model),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending")
ggcoef(gmodel1, mapping = aes_string(y = "term", x = "estimate"),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending")
ggcoef(gmodel3, mapping = aes_string(y = "term", x = "estimate"),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending")
a <- ggcoef(gmodel3, mapping = aes_string(y = "term", x = "estimate"),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending") +
ggcoef(gmodel2)
a <- ggcoef(gmodel3, mapping = aes_string(y = "term", x = "estimate"),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending") +
ggcoef(gmodel2, mapping = aes_string(y = "term", x = "estimate"),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending")
a <- gmodel1 %>%
ggcoef() +
ggcoef(gmodel2, mapping = aes_string(y = "term", x = "estimate"),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending") +
ggcoef(gmodel3, mapping = aes_string(y = "term", x = "estimate"),
exponentiate = T,
vline = T, vline_intercept = 1, vline_linetype = "dotted", vline_size = 1,
errorbar_color = "seagreen", conf.int = T,
sort = "ascending")
#Trying out GGcoef
(dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
theme_bw())
effects.data <- rbind(gm1, gm2, gm3, gm4)
#Trying out GGcoef
(dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
theme_bw())
legend.position = c(0.007, 0.01),
theme_bw() +
theme_bw() +
#Trying out GGcoef
(dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
theme_bw() +
theme(plot.title = element_text(face="bold"),
legend.position = c(0.007, 0.01),
legend.justification = c(0, 0),
legend.background = element_rect(colour="grey80"),
legend.title = element_blank()))
#Trying out GGcoef
(dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
labs(title = "Effect Sizes", x = "Odds Ratios", y = " ") +
theme(plot.title = element_text(face="bold"),
legend.position = c(0.007, 0.01),
legend.justification = c(0, 0),
legend.title = element_blank()) +
theme_bw())
#Trying out GGcoef
(dwplot <- dwplot(effects.data) +
geom_vline(xintercept = 1, colour = "grey60", linetype = 2) +
labs(title = "Effect Sizes", x = "Odds Ratios", y = " ") +
theme(plot.title = element_text(face="bold"),
legend.position = c(5, 0.01),
legend.justification = c(0, 0),
legend.title = element_blank()) +
theme_bw())
library(tidyverse)
library(dplyr)
library(gridExtra)
library(grid)
library(rethinking)
library(kableExtra)
library(ggthemes)
library(knitr)
library(broom)
library(brms)
library(loo)
library(bayesplot)
library(dotwhisker)
library(GGally)
#Windows
#load("E:/Repository/Biso/Biso/data/wave1.rda")
#load("E:/Repository/Biso/Biso/data/network.wave1.rda")
#load("E:/Repository/Biso/Biso/data/weights.rda")
#Mac
load("~/desktop/Repository/Biso/data/wave1.rda")
load("~/desktop/Repository/Biso/data/network.wave1.rda")
load("~/desktop/Repository/Biso/data/weights.rda")
#Renamed
wave1.data <- da21600.0001
network.data <- da21600.0003
weights <- da21600.0004
#Merging Relevant Variables into one Data Frame
data1 <- wave1.data %>%
dplyr :: select(AID, H1FV2, H1FV3, H1FV4, H1FV6, S6A, S6B, S6C, S6D, S6E, S4, S1, S2, PA55, H1FV9)
data2 <-  network.data %>%
dplyr :: select(AID, ESRDEN, BCENT10X, IDGX2, SEG1RCE5, ERNRC5, EHRC5, AXS59A, AXS59B, AXS59C, AXS59D, AXS59E, AXS59F, AXS59G, SRCE51, SRCE52, SRCE53, SRCE54, SRCE55)
data3 <- weights %>%
dplyr :: select(AID, GSWGT1)
mydata <- merge(data1, data2, by = "AID")
#mydata <- merge(my.data, data3, by = "AID")
rm(da21600.0001, da21600.0003, da21600.0004, data1, data2, data3, wave1.data, network.data, weights)
#Race variable
mydata <- mydata %>%
mutate(race = case_when(
(S4 == "(1) (1) Yes (go to Q.5)" & S6A == "(1) (1) Marked") ~ "white latino",
(S4 == "(1) (1) Yes (go to Q.5)" & S6B == "(1) (1) Marked") ~ "black latino",
(S6A == "(1) (1) Marked" & S6B== "(1) (1) Marked") ~ "mixed race",
(S6A == "(1) (1) Marked" & S6C == "(1) (1) Marked") ~ "mixed race",
(S6A == "(1) (1) Marked" & S6D == "(1) (1) Marked") ~ "mixed race",
(S6A == "(1) (1) Marked" & S6E == "(1) (1) Marked") ~ "mixed race",
(S6B == "(1) (1) Marked" & S6C == "(1) (1) Marked") ~ "mixed race",
(S6B == "(1) (1) Marked" & S6D == "(1) (1) Marked") ~ "mixed race",
(S6B == "(1) (1) Marked" & S6E == "(1) (1) Marked") ~ "mixed race",
(S6C == "(1) (1) Marked" & S6D == "(1) (1) Marked") ~ "mixed race",
(S6C == "(1) (1) Marked" & S6E == "(1) (1) Marked") ~ "mixed race",
(S6D == "(1) (1) Marked" & S6E == "(1) (1) Marked") ~ "mixed race",
S4 == "(1) (1) Yes (go to Q.5)" ~ "latino",
S6A == "(1) (1) Marked" ~ "white",
S6B == "(1) (1) Marked" ~ "black",
S6C == "(1) (1) Marked" ~ "asian",
S6D == "(1) (1) Marked" ~ "native american",
S6E == "(1) (1) Marked" ~ "other",
T ~ NA_character_))
#Victimization
mydata <- mydata %>%
mutate(victim = case_when(
(H1FV2 == "(1) (1) Once" |  H1FV2 == "(2) (2) More than once") ~ 1,
(H1FV3 == "(1) (1) Once" |  H1FV3 == "(2) (2) More than once") ~ 1,
(H1FV4 == "(1) (1) Once" |  H1FV4 == "(2) (2) More than once") ~ 1,
(H1FV6 == "(1) (1) Once" |  H1FV6 == "(2) (2) More than once") ~ 1,
H1FV2 == "(0) (0) Never" ~ 0,
H1FV3 == "(0) (0) Never" ~ 0,
H1FV4 == "(0) (0) Never" ~ 0,
H1FV6 == "(0) (0) Never" ~ 0,
T ~ NA_real_))
#Dependent Variable Breakdown Table
mydata <- mydata %>%
mutate(knife.gun = case_when(
(H1FV2 == "(1) (1) Once" |  H1FV2 == "(2) (2) More than once") ~ 1,
H1FV2 == "(0) (0) Never" ~ 0,
T ~ NA_real_))
mydata <- mydata %>%
mutate(shot = case_when(
(H1FV3 == "(1) (1) Once" |  H1FV3 == "(2) (2) More than once") ~ 1,
H1FV3 == "(0) (0) Never" ~ 0,
T ~ NA_real_))
mydata <- mydata %>%
mutate(stabbed = case_when(
(H1FV4 == "(1) (1) Once" |  H1FV4 == "(2) (2) More than once") ~ 1,
H1FV4 == "(0) (0) Never" ~ 0,
T ~ NA_real_))
mydata <- mydata %>%
mutate(jumped = case_when(
(H1FV6 == "(1) (1) Once" |  H1FV6 == "(2) (2) More than once") ~ 1,
H1FV6 == "(0) (0) Never" ~ 0,
T ~ NA_real_))
#Creating the Network Delinquency Variable
mydata <- mydata %>%
mutate(network.delinquency = (AXS59A + AXS59B + AXS59C + AXS59D + AXS59E + AXS59F + AXS59G)/7)
#Cleaning Control Variables
mydata <- mydata %>%
mutate(female = case_when(
S2 == "(1) (1) Male" ~ 0,
S2 == "(2) (2) Female" ~ 1,
T ~ NA_real_))
mydata$age <- mydata$S1
mydata$family.income <- mydata$PA55
mydata <- mydata %>%
mutate(weapon.carry = case_when(
H1FV9 == "(0) (0) None (skip to Q.11)" ~ 0,
(H1FV9 == "(1) (1) 1 day" | H1FV9 == "(2) (2) 2 or 3 days" | H1FV9 == "(3) (3) 4 or 5 days" | H1FV9 == "(4) (4) 6 or more days") ~ 1,
T ~ NA_real_))
#Renaming Network Variables
mydata$racial.heterogeneity <- mydata$ERNRC5
mydata$dense <- mydata$ESRDEN
mydata$centrality <- mydata$BCENT10X
mydata$popularity <- mydata$IDGX2
mydata <- mydata %>%
mutate(den = case_when(
(popularity == 0 & centrality == 0) ~ 0,
T ~ dense))
mydata <- mydata %>%
mutate(density = den*100)
#Variable Selection
mydata.dv <- mydata %>%
select(knife.gun, shot, stabbed, jumped)
mydata <- mydata %>%
select(AID, victim, race, female, age, family.income, weapon.carry, racial.heterogeneity, network.delinquency, popularity, centrality, density)
#Only complete rows Kept
mydata.c <- mydata[complete.cases(mydata), ]
racial.heterogeneity <- quantile(mydata.c$racial.heterogeneity, c(.25, .75))
mydata.c <- mydata.c %>%
mutate(rh.cat = case_when(
racial.heterogeneity <= .25 ~ "25th Percentile",
(racial.heterogeneity > .25 & racial.heterogeneity < .6) ~ "IQR",
racial.heterogeneity >= .6 ~ "75th Percentile",
T ~ NA_character_))
racial.heterogeneity.levels <- c("25th Percentile", "IQR", "75th Percentile")
mydata.c <- mydata.c %>%
mutate(rh.cat = factor(rh.cat, levels = racial.heterogeneity.levels, ordered = T))
(rh.victim <- mydata.c %>%
ggplot(aes(x = rh.cat)) +
geom_bar(aes(fill = as.character(victim)), position = "fill") +
geom_hline(yintercept= mean(mydata.c$victim), linetype = "dashed") +
ylim(0, .22) +
annotate("text", x = 1, y = 0.2, label = "Mean\nVictimization", size = 3) +
coord_flip() +
labs(title = "Racial Heterogeneity & Victimization", y = "Proportion of Victims", x = " ") +
scale_fill_manual(values=c("white", "seagreen"),
name="Victimization",
breaks=c("1", "0"),
labels=c("Victims", "Non-Victims")) +
theme_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
ggsave("rh.victim.pdf", rh.victim, width = 25, height = 15, units = "cm")
network.delinquency <- quantile(mydata.c$network.delinquency, c(.25, .75))
mydata.c <- mydata.c %>%
mutate(Delinquency = case_when(
network.delinquency <= .7143 ~ "Non Delinquents", #At or Below the 25th Percentile
(network.delinquency > .7143 & network.delinquency < 1.4286) ~ "Average Teen", #IQR
network.delinquency >= 1.4286 ~ "Delinquents", #At or Above the 75th Percentile
T ~ NA_character_))
(rh.delinquency <- mydata.c %>%
ggplot(aes(x = rh.cat)) +
geom_bar(aes(fill = Delinquency), position = "fill") +
coord_flip() +
labs(title = "Racial Heterogeneity & Delinquency", y = "Proportion of Delinquents", x = " ") +
theme_pander() +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
ggsave("rh.delinquency.pdf", rh.delinquency, width = 25, height = 15, units = "cm")
a <- grid.arrange(rh.victim, rh.delinquency, nrow = 2)
ggsave("rh.pdf", a, width = 25, height = 15, units = "cm")
(race.delinquency <- mydata.c %>%
ggplot(aes(x = race)) +
geom_bar(aes(fill = Delinquency), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
ggsave("race.delinquency.pdf", race.delinquency, width = 25, height = 15, units = "cm")
ggsave("wp-delinquency.pdf", wp.delinquency, width = 25, height = 15, units = "cm")
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = race)) +
geom_bar(aes(fill = Delinquency), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = race)) +
geom_bar(aes(fill = as.character(weapon.carry)), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
ggsave("wp-delinquency.pdf", wp.delinquency, width = 25, height = 15, units = "cm")
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = rh.cat)) +
geom_bar(aes(fill = as.character(weapon.carry)), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = Delinquency)) +
geom_bar(aes(fill = as.character(weapon.carry)), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = weapon.carry)) +
geom_bar(aes(fill = Delinquency), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = weapon.carry)) +
geom_bar(aes(fill = race), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = weapon.carry)) +
geom_bar(aes(fill = rh.cat), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = weapon.carry)) +
geom_bar(aes(fill = Delinquency), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
View(mydata.c)
mydata.c <- mydata.c %>%
mutate(weapon = case_when(
weapon.carry == 1 ~ "Has Carried",
weapon.carry == 0 ~ "Has not carried",
T ~ NA_character_
))
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = weapon)) +
geom_bar(aes(fill = rh.cat), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
(wp.delinquency <- mydata.c %>%
ggplot(aes(x = weapon)) +
geom_bar(aes(fill = Delinquency), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
centrality <- quantile(mydata.c$centrality, c(.25, .75))
mydata.c <- mydata.c %>%
mutate(weapon = case_when(
weapon.carry == 1 ~ "Has Carried",
weapon.carry == 0 ~ "Has not carried",
T ~ NA_character_))
centrality <- quantile(mydata.c$centrality, c(.25, .75))
mydata.c <- mydata.c %>%
mutate(Centrality = case_when(
centrality <= .353 ~ "Not Central",
(centrality > .353 & centrality < 1.278) ~ "Average",
centrality >= 1.278 ~ "Highly Central",
T ~ NA_character_))
mydata.c <- mydata.c %>%
mutate(Popularity = case_when(
popularity <= .353 ~ "Not Popular",
(popularity > .353 & popularity < 1.278) ~ "Average",
popularity >= 1.278 ~ "Highly Popular",
T ~ NA_character_))
mydata.c <- mydata.c %>%
mutate(Density = case_when(
density <= .353 ~ "Not Dense",
(density > .353 & density < 1.278) ~ "Average",
density >= 1.278 ~ "Highly Dense",
T ~ NA_character_))
(wp.centrality <- mydata.c %>%
ggplot(aes(x = Centrality)) +
geom_bar(aes(fill = weapon), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
#ggsave("wp-delinquency.pdf", wp.delinquency, width = 25, height = 15, units = "cm")
(wp.popularity <- mydata.c %>%
ggplot(aes(x = Popularity)) +
geom_bar(aes(fill = weapon), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
#ggsave("wp-delinquency.pdf", wp.delinquency, width = 25, height = 15, units = "cm")
(wp.density <- mydata.c %>%
ggplot(aes(x = Density)) +
geom_bar(aes(fill = weapon), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
#ggsave("wp-delinquency.pdf", wp.delinquency, width = 25, height = 15, units = "cm")
(wp.centrality <- mydata.c %>%
ggplot(aes(x = Centrality)) +
geom_bar(aes(fill = Delinquency), position = "fill") +
coord_flip() +
labs(title = "Race & Delinquency", y = "Proportion of Delinquents", x = " ") +
scale_fill_pander() +
theme(text = element_text(family = "Times"), plot.title = element_text(hjust = 0.5)))
